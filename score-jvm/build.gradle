buildscript {
    ext.serialization_version = '0.13.0'

    repositories {
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
    }
}

plugins {
    id 'maven-publish'
}


apply plugin: 'kotlin-platform-jvm'
apply plugin: 'kotlinx-serialization'

dependencies {
    expectedBy project(":score-common")
    compile libraries.kotlin_stdlib
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    implementation "com.github.aakira:napier:$napierVersion"
    implementation "com.github.aakira:napier-jvm:$napierVersion"
    testCompile libraries.kotlin_test_junit
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'score-jvm'
            from components.java
//            artifact sourcesJar
//            artifact javadocJar
//            pom {
//                name = 'My Library'
//                description = 'A concise description of my library'
//                url = 'http://www.example.com/library'
//                licenses {
//                    license {
//                        name = 'The Apache License, Version 2.0'
//                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id = 'johnd'
//                        name = 'John Doe'
//                        email = 'john.doe@example.com'
//                    }
//                }
//                scm {
//                    connection = 'scm:git:git://example.com/my-library.git'
//                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
//                    url = 'http://example.com/my-library/'
//                }
//            }
        }
    }
//    repositories {
//        maven {
//            // change URLs to point to your repos, e.g. http://my.org/repo
//            def releasesRepoUrl = "$buildDir/repos/releases"
//            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
//            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//        }
//    }
}


//publishToMavenLocal